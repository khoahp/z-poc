/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.zeus.hr.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.exportimport.kernel.lar.StagedModelType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.zeus.hr.model.HrAction;
import com.zeus.hr.model.HrActionModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the HrAction service. Represents a row in the &quot;zhr_HrAction&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link HrActionModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link HrActionImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see HrActionImpl
 * @see HrAction
 * @see HrActionModel
 * @generated
 */
@ProviderType
public class HrActionModelImpl extends BaseModelImpl<HrAction>
	implements HrActionModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a hr action model instance should use the {@link HrAction} interface instead.
	 */
	public static final String TABLE_NAME = "zhr_HrAction";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "feedbackId", Types.BIGINT },
			{ "candidateId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "type_", Types.VARCHAR },
			{ "date_", Types.TIMESTAMP },
			{ "note", Types.VARCHAR },
			{ "feedback", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "createdUser", Types.BIGINT },
			{ "modifiedUser", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("feedbackId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("candidateId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("type_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("date_", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("note", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("feedback", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("createdUser", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("modifiedUser", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table zhr_HrAction (uuid_ VARCHAR(75) null,feedbackId LONG not null primary key,candidateId LONG,companyId LONG,groupId LONG,type_ VARCHAR(75) null,date_ DATE null,note VARCHAR(75) null,feedback VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,createdUser LONG,modifiedUser LONG)";
	public static final String TABLE_SQL_DROP = "drop table zhr_HrAction";
	public static final String ORDER_BY_JPQL = " ORDER BY hrAction.feedbackId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY zhr_HrAction.feedbackId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.poc.candidate.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.zeus.hr.model.HrAction"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.poc.candidate.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.zeus.hr.model.HrAction"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.poc.candidate.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.zeus.hr.model.HrAction"),
			true);
	public static final long CANDIDATEID_COLUMN_BITMASK = 1L;
	public static final long COMPANYID_COLUMN_BITMASK = 2L;
	public static final long GROUPID_COLUMN_BITMASK = 4L;
	public static final long UUID_COLUMN_BITMASK = 8L;
	public static final long FEEDBACKID_COLUMN_BITMASK = 16L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.poc.candidate.service.util.ServiceProps.get(
				"lock.expiration.time.com.zeus.hr.model.HrAction"));

	public HrActionModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _feedbackId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setFeedbackId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _feedbackId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return HrAction.class;
	}

	@Override
	public String getModelClassName() {
		return HrAction.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("feedbackId", getFeedbackId());
		attributes.put("candidateId", getCandidateId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("type", getType());
		attributes.put("date", getDate());
		attributes.put("note", getNote());
		attributes.put("feedback", getFeedback());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("createdUser", getCreatedUser());
		attributes.put("modifiedUser", getModifiedUser());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long feedbackId = (Long)attributes.get("feedbackId");

		if (feedbackId != null) {
			setFeedbackId(feedbackId);
		}

		Long candidateId = (Long)attributes.get("candidateId");

		if (candidateId != null) {
			setCandidateId(candidateId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		String type = (String)attributes.get("type");

		if (type != null) {
			setType(type);
		}

		Date date = (Date)attributes.get("date");

		if (date != null) {
			setDate(date);
		}

		String note = (String)attributes.get("note");

		if (note != null) {
			setNote(note);
		}

		String feedback = (String)attributes.get("feedback");

		if (feedback != null) {
			setFeedback(feedback);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long createdUser = (Long)attributes.get("createdUser");

		if (createdUser != null) {
			setCreatedUser(createdUser);
		}

		Long modifiedUser = (Long)attributes.get("modifiedUser");

		if (modifiedUser != null) {
			setModifiedUser(modifiedUser);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getFeedbackId() {
		return _feedbackId;
	}

	@Override
	public void setFeedbackId(long feedbackId) {
		_feedbackId = feedbackId;
	}

	@Override
	public long getCandidateId() {
		return _candidateId;
	}

	@Override
	public void setCandidateId(long candidateId) {
		_columnBitmask |= CANDIDATEID_COLUMN_BITMASK;

		if (!_setOriginalCandidateId) {
			_setOriginalCandidateId = true;

			_originalCandidateId = _candidateId;
		}

		_candidateId = candidateId;
	}

	public long getOriginalCandidateId() {
		return _originalCandidateId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public String getType() {
		if (_type == null) {
			return StringPool.BLANK;
		}
		else {
			return _type;
		}
	}

	@Override
	public void setType(String type) {
		_type = type;
	}

	@Override
	public Date getDate() {
		return _date;
	}

	@Override
	public void setDate(Date date) {
		_date = date;
	}

	@Override
	public String getNote() {
		if (_note == null) {
			return StringPool.BLANK;
		}
		else {
			return _note;
		}
	}

	@Override
	public void setNote(String note) {
		_note = note;
	}

	@Override
	public String getFeedback() {
		if (_feedback == null) {
			return StringPool.BLANK;
		}
		else {
			return _feedback;
		}
	}

	@Override
	public void setFeedback(String feedback) {
		_feedback = feedback;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public long getCreatedUser() {
		return _createdUser;
	}

	@Override
	public void setCreatedUser(long createdUser) {
		_createdUser = createdUser;
	}

	@Override
	public long getModifiedUser() {
		return _modifiedUser;
	}

	@Override
	public void setModifiedUser(long modifiedUser) {
		_modifiedUser = modifiedUser;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				HrAction.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			HrAction.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public HrAction toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (HrAction)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		HrActionImpl hrActionImpl = new HrActionImpl();

		hrActionImpl.setUuid(getUuid());
		hrActionImpl.setFeedbackId(getFeedbackId());
		hrActionImpl.setCandidateId(getCandidateId());
		hrActionImpl.setCompanyId(getCompanyId());
		hrActionImpl.setGroupId(getGroupId());
		hrActionImpl.setType(getType());
		hrActionImpl.setDate(getDate());
		hrActionImpl.setNote(getNote());
		hrActionImpl.setFeedback(getFeedback());
		hrActionImpl.setCreateDate(getCreateDate());
		hrActionImpl.setModifiedDate(getModifiedDate());
		hrActionImpl.setCreatedUser(getCreatedUser());
		hrActionImpl.setModifiedUser(getModifiedUser());

		hrActionImpl.resetOriginalValues();

		return hrActionImpl;
	}

	@Override
	public int compareTo(HrAction hrAction) {
		long primaryKey = hrAction.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof HrAction)) {
			return false;
		}

		HrAction hrAction = (HrAction)obj;

		long primaryKey = hrAction.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		HrActionModelImpl hrActionModelImpl = this;

		hrActionModelImpl._originalUuid = hrActionModelImpl._uuid;

		hrActionModelImpl._originalCandidateId = hrActionModelImpl._candidateId;

		hrActionModelImpl._setOriginalCandidateId = false;

		hrActionModelImpl._originalCompanyId = hrActionModelImpl._companyId;

		hrActionModelImpl._setOriginalCompanyId = false;

		hrActionModelImpl._originalGroupId = hrActionModelImpl._groupId;

		hrActionModelImpl._setOriginalGroupId = false;

		hrActionModelImpl._setModifiedDate = false;

		hrActionModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<HrAction> toCacheModel() {
		HrActionCacheModel hrActionCacheModel = new HrActionCacheModel();

		hrActionCacheModel.uuid = getUuid();

		String uuid = hrActionCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			hrActionCacheModel.uuid = null;
		}

		hrActionCacheModel.feedbackId = getFeedbackId();

		hrActionCacheModel.candidateId = getCandidateId();

		hrActionCacheModel.companyId = getCompanyId();

		hrActionCacheModel.groupId = getGroupId();

		hrActionCacheModel.type = getType();

		String type = hrActionCacheModel.type;

		if ((type != null) && (type.length() == 0)) {
			hrActionCacheModel.type = null;
		}

		Date date = getDate();

		if (date != null) {
			hrActionCacheModel.date = date.getTime();
		}
		else {
			hrActionCacheModel.date = Long.MIN_VALUE;
		}

		hrActionCacheModel.note = getNote();

		String note = hrActionCacheModel.note;

		if ((note != null) && (note.length() == 0)) {
			hrActionCacheModel.note = null;
		}

		hrActionCacheModel.feedback = getFeedback();

		String feedback = hrActionCacheModel.feedback;

		if ((feedback != null) && (feedback.length() == 0)) {
			hrActionCacheModel.feedback = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			hrActionCacheModel.createDate = createDate.getTime();
		}
		else {
			hrActionCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			hrActionCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			hrActionCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		hrActionCacheModel.createdUser = getCreatedUser();

		hrActionCacheModel.modifiedUser = getModifiedUser();

		return hrActionCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", feedbackId=");
		sb.append(getFeedbackId());
		sb.append(", candidateId=");
		sb.append(getCandidateId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", type=");
		sb.append(getType());
		sb.append(", date=");
		sb.append(getDate());
		sb.append(", note=");
		sb.append(getNote());
		sb.append(", feedback=");
		sb.append(getFeedback());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", createdUser=");
		sb.append(getCreatedUser());
		sb.append(", modifiedUser=");
		sb.append(getModifiedUser());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("com.zeus.hr.model.HrAction");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>feedbackId</column-name><column-value><![CDATA[");
		sb.append(getFeedbackId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>candidateId</column-name><column-value><![CDATA[");
		sb.append(getCandidateId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>type</column-name><column-value><![CDATA[");
		sb.append(getType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>date</column-name><column-value><![CDATA[");
		sb.append(getDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>note</column-name><column-value><![CDATA[");
		sb.append(getNote());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>feedback</column-name><column-value><![CDATA[");
		sb.append(getFeedback());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdUser</column-name><column-value><![CDATA[");
		sb.append(getCreatedUser());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedUser</column-name><column-value><![CDATA[");
		sb.append(getModifiedUser());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = HrAction.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			HrAction.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _feedbackId;
	private long _candidateId;
	private long _originalCandidateId;
	private boolean _setOriginalCandidateId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private String _type;
	private Date _date;
	private String _note;
	private String _feedback;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _createdUser;
	private long _modifiedUser;
	private long _columnBitmask;
	private HrAction _escapedModel;
}